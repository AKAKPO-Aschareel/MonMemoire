
function dataModulate = Modulation(OFDM_Parameters,inputdata)

%Initialisation des variables
%----------------------------------------------------------------------------------

%QPSK PARAMETERS

M = OFDM_Parameters.M; % number of symbole for modulation QPSK
n = OFDM_Parameters.n; % number of  bits per symbole QPSK
init_phase = OFDM_Parameters.init_phase; % phase inital QPSK



% OFDM PARAMETERS Mode I
M_IFFT = OFDM_Parameters.M_IFFT ; %number of sub-carriers 
dataOfdm = OFDM_Parameters.dataOfdm; % nombres de paquets OFDM

nbits = OFDM_Parameters.nbits; %nombre de bits total à envoyer


cp= 1/2 * M_IFFT;  % définition du préfixe cyclique

nbPilotes=OFDM_Parameters.; %nombre de paquets  pilotes
nbitsPilotes = M_IFFT*nbPilotes*n ; %nombre total de bits des pilotes


 
%---------------------------------------------------------------------------------------
 

modDataQpsk = inputdata;


%{
% Pilots symbols
 pilote_OFDM = modPilote();

dataEnd= [pilote_OFDM modData]; %concatenation pilotes+data
%}

 dataEnd= modDataQpsk; 
%-----IFFT-----
 IFFT_function= ifft(dataEnd,M_IFFT); %Inverse discrete Fourier transform 
 
 %%%% Préfix cyclic
    Ajout_CP = [ IFFT_function; IFFT_function(1:cp,:)];
    
    dataModulate = Ajout_CP;
 
end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

